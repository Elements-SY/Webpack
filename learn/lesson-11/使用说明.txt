在当前文件目录下打开终端直接npm i即可;

如果全局安装了webpack和webpack-cli则可以直接跳过npm install。

上节内容我们学习了资源拷贝、清除文件。

copy-webpack-plugin 和 clean-webpack-plugin这两个插件

我们用copy-webpack-plugin插件来实现打包的时候同时把整个assets目录复制剪切到我们打包后的dist目录下；

使用clean-webpack-plugin插件打包的时候清空dist目录下的目标对象。

本节内容我们引入Vue前端库,实现一个单页面。


我们打包之后先看一下dist文件中的js文件，发现会多出来几个序列js文件。

这是因为对于打包的文件，如果该打包的文件中通过异步引入文件，

那么就会被分段打包做异步加载处理，如果使用同步引入文件则不会被分段打包，

但是所有的资源被打包在一个文件会造成体积臃肿加载缓慢。

详情参考当前目录下的pic.png图

但main.js主文件不要再异步引入路由表了，否则打包之后预览加载不出来。

如果不想在打包后生成序列文件，要么被打包文件不使用异步引入文件，

要么在plugins里添加new webpack.optimize.MinChunkSizePlugin()即可